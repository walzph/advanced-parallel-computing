#!/usr/bin/env bash
exec 3>&1 4>&2
trap 'exec 2>&4 1>&3' 0 1 2 3
exec 1>log.out 2>&1

printf "\n--------------------\n\n"
printf "using openmp parallel & explicit vector instructions:\n"
make clean > /dev/null
for i in {0..13}; do
	echo BATCH_SIZE=$[2**$i]
	make USE_OMP=1 USE_OMP_FOR=1 USE_OMP_SIMD=0 USE_VEC=1 BATCH_SIZE=$[2**$i] rebuild > /dev/null && ./main
	printf "\n--------------------\n\n"
done
make clean > /dev/null

sleep 1m

printf "\n--------------------\n\n"
printf "using openmp parallel & SIMD:\n"
make clean > /dev/null
for i in {0..13}; do
	echo BATCH_SIZE=$[2**$i]
	make USE_OMP=1 USE_OMP_FOR=1 USE_OMP_SIMD=1 USE_VEC=0 BATCH_SIZE=$[2**$i] rebuild > /dev/null && ./main
	printf "\n--------------------\n\n"
done
make clean > /dev/null

sleep 1m

printf "\n--------------------\n\n"
printf "using openmp parallel:\n"
make clean > /dev/null
for i in {0..13}; do
	echo BATCH_SIZE=$[2**$i]
	make USE_OMP=1 USE_OMP_FOR=1 USE_OMP_SIMD=0 USE_VEC=0 BATCH_SIZE=$[2**$i] rebuild > /dev/null && ./main
	printf "\n--------------------\n\n"
done
make clean > /dev/null

sleep 1m


printf "\n--------------------\n\n"
printf "using openmp SIMD:\n"
make clean > /dev/null
for i in {0..13}; do
	echo BATCH_SIZE=$[2**$i]
	make USE_OMP=1 USE_OMP_FOR=0 USE_OMP_SIMD=1 USE_VEC=0 BATCH_SIZE=$[2**$i] rebuild > /dev/null && ./main
	printf "\n--------------------\n\n"
done
make clean > /dev/null

sleep 1m


printf "\n--------------------\n\n"
printf "using explicit vector instructions:\n"
make clean > /dev/null
for i in {0..13}; do
	echo BATCH_SIZE=$[2**$i]
	make USE_OMP=0 USE_OMP_FOR=0 USE_OMP_SIMD=0 USE_VEC=1 BATCH_SIZE=$[2**$i] rebuild > /dev/null && ./main
	printf "\n--------------------\n\n"
done
make clean > /dev/null

sleep 1m

printf "\n--------------------\n\n"
printf "using nothing:\n"
make clean > /dev/null
for i in {0..13}; do
	echo BATCH_SIZE=$[2**$i]
	make USE_OMP=0 USE_OMP_SIMD=0 USE_VEC=0 BATCH_SIZE=$[2**$i] rebuild > /dev/null && ./main
	printf "\n--------------------\n\n"
done
make clean > /dev/null
